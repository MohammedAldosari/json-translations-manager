{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","<section class=\"section\" (keyup)=\"onKeyUp($event)\">\n  <div class=\"center\">\n    <div class=\"svg\" style=\"width:10%\"></div>\n    <h3 class=\"text-style\">Json Tralation Manger</h3>\n  </div>\n  <form class=\"form-style\" [formGroup]=\"translationForms\" #form *ngIf=\"this.message\">\n    <div class=\"key-text\">\n      <span class=\"text-style\">Translation key : <span style=\"font-weight: bold;\">{{ key }}</span></span>\n    </div>\n\n    <ul>\n      <li formArrayName=\"value\" *ngFor=\"let item of this.value.controls; let i = index;\"\n        [dir]=\" this.message.languages[i].Direction\">\n        <div [formGroupName]=\"i\">\n          <label [class]=\" this.message.languages[i].Direction\" [for]=\" this.message.languages[i].Culture\">\n            {{ this.message.languages[i].Native}}</label>\n          <input type=\"text\" [name]=\"this.message.languages[i].Culture\" formControlName=\"translationValue\"\n            [name]=\" this.message.languages[i].Culture\" />\n        </div>\n      </li>\n\n      <li></li>\n    </ul>\n    <div style=\"text-align: center;\">\n      <button type=\"button\" (click)=\"save()\">\n        Save\n\n        <ng-container *ngIf=\"navigator.platform.match('Mac'); then Mac; else Other\">\n        </ng-container>\n\n        <ng-template #Mac>\n          <span>\n            (Command+S)\n          </span>\n        </ng-template>\n        <ng-template #Other>\n          <span>\n            (Ctrl+S)\n          </span>\n        </ng-template>\n      </button>\n    </div>\n  </form>\n\n\n</section>\n<notifier-container></notifier-container>","import {\n  Component,\n  HostListener,\n  OnInit,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { NotifierService } from 'angular-notifier';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('form', { static: false }) form: ElementRef;\n\n  title = 'jtw-webview';\n  message: WebviewMessage;\n  navigator = navigator;\n  key = '';\n  translationForms: FormGroup;\n  value: FormArray;\n  vsCodeFunction = Function(`\n  if (typeof acquireVsCodeApi == 'function') {\n    return acquireVsCodeApi();\n  } else {\n    return undefined;\n  }\n  `);\n\n  vscode = this.vsCodeFunction();\n\n  constructor(\n    private notifierService: NotifierService,\n    private formBuilder: FormBuilder\n  ) {}\n  ngOnInit(): void {\n    this.vscode.postMessage('started');\n  }\n\n  private generateForm(message: WebviewMessage): void {\n    this.translationForms = this.formBuilder.group({\n      translationKey: message.TranslationKey,\n      value: this.formBuilder.array([]),\n    });\n    this.value = this.translationForms.controls.value as FormArray;\n    message.value.forEach((element) => {\n      this.value.push(\n        this.translationItem(element.culture, element.translationValue)\n      );\n    });\n    setTimeout(() => {\n      this.setFocus(this.message.languages[0].Culture);\n    }, 200);\n  }\n  translationItem(culture: string, translationValue: string = ''): FormGroup {\n    return this.formBuilder.group({\n      culture,\n      translationValue,\n    });\n  }\n\n  @HostListener('window:message', ['$event'])\n  private onMessage(event: any): void {\n    if (event && event.data) {\n      if ((event.data as WebviewMessage).TranslationKey) {\n        this.message = event.data as WebviewMessage;\n        this.key = this.message.TranslationKey;\n        this.generateForm(this.message);\n        console.log(this.message);\n      } else if (event.data === 'Saved') {\n        this.dataSaved();\n      }\n    }\n  }\n\n  setFocus(name: string): void {\n    const ele = this.form.nativeElement[name];\n    if (ele) {\n      ele.focus();\n    }\n  }\n\n  onKeyUp($event): void {\n    // Detect platform\n    if (navigator.platform.match('Mac')) {\n      this.handleMacKeyEvents($event);\n    } else {\n      this.handleWindowsKeyEvents($event);\n    }\n  }\n\n  handleMacKeyEvents($event: any): void {\n    // MetaKey documentation\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/metaKey\n    const charCode = String.fromCharCode($event.which).toLowerCase();\n    if ($event.metaKey && charCode === 's') {\n      // Action on Cmd + S\n      this.save();\n      $event.preventDefault();\n      $event.stopImmediatePropagation();\n    }\n  }\n\n  handleWindowsKeyEvents($event): void {\n    const charCode = String.fromCharCode($event.which).toLowerCase();\n    if ($event.ctrlKey && charCode === 's') {\n      // Action on Ctrl + S\n      this.save();\n      $event.preventDefault();\n      $event.stopImmediatePropagation();\n    }\n  }\n\n  save(): void {\n    console.log(this.translationForms.value);\n\n    this.vscode.postMessage(this.translationForms.value);\n  }\n\n  dataSaved(): void {\n    this.notifierService.notify('success', 'Translation Saved');\n  }\n}\n\ninterface Languages {\n  Culture: string;\n  English: string;\n  Native: string;\n  Direction: string;\n}\n\ninterface WebviewMessage {\n  languages: Array<Languages>;\n  TranslationKey: string;\n  value: [\n    {\n      culture: string;\n      translationValue: string;\n    }\n  ];\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { NotifierModule } from 'angular-notifier';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, ReactiveFormsModule, FormsModule, NotifierModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}