{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {\r\n  Component,\r\n  HostListener,\r\n  OnInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\r\nimport { HotToastService } from '@ngneat/hot-toast';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  @ViewChild('form', { static: false }) form: ElementRef;\r\n\r\n  title = 'jtw-webview';\r\n  message: WebviewMessage;\r\n  navigator = navigator;\r\n  key = '';\r\n  translationForms: FormGroup;\r\n  value: FormArray;\r\n\r\n  vsCodeFunction = Function(`\r\n  if (typeof acquireVsCodeApi == 'function') {\r\n    return acquireVsCodeApi();\r\n  } else {\r\n    return undefined;\r\n  }\r\n  `);\r\n\r\n  vscode = this.vsCodeFunction();\r\n\r\n  constructor(\r\n    private notifierService: HotToastService,\r\n    private formBuilder: FormBuilder,\r\n    private changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n  ngOnInit(): void {\r\n    this.vscode.postMessage('started');\r\n  }\r\n\r\n  private generateForm(message: WebviewMessage): void {\r\n    this.translationForms = this.formBuilder.group({\r\n      translationKey: message.TranslationKey,\r\n      isArray: false,\r\n      value: this.formBuilder.array([]),\r\n    });\r\n    this.value = this.translationForms.controls.value as FormArray;\r\n    this.translationForms.controls.isArray.valueChanges.subscribe(() => {\r\n      this.value.controls.forEach((element: FormGroup) => {\r\n        if (this.translationForms.controls.isArray.value === true) {\r\n          element.controls.translationValue.setValue(element.controls.translationValue.value.split(','));\r\n        }\r\n        else {\r\n          element.controls.translationValue.setValue(element.controls.translationValue.value.toString());\r\n        }\r\n      });\r\n      console.log('**************');\r\n      console.log(this.value);\r\n      this.changeDetectorRef.detectChanges();\r\n    });\r\n\r\n    message.value.forEach((element) => {\r\n      if (this.translationForms.controls.isArray.value === false) {\r\n        this.translationForms.controls.isArray.setValue(this.isArrayOfStrings(element.translationValue));\r\n      }\r\n      this.value.push(\r\n        this.translationItem(element.culture, element.translationValue)\r\n      );\r\n    });\r\n    setTimeout(() => {\r\n      this.setFocus(this.message.languages[0].Culture);\r\n    }, 200);\r\n  }\r\n  translationItem(culture: string, translationValue: string | Array<string>): FormGroup {\r\n    return this.formBuilder.group({\r\n      culture: new FormControl(culture),\r\n      translationValue: new FormControl(translationValue),\r\n    });\r\n  }\r\n  isArrayOfStrings(value: any): boolean {\r\n    return Array.isArray(value) && value.every(item => typeof item === \"string\");\r\n  }\r\n\r\n  @HostListener('window:message', ['$event'])\r\n  private onMessage(event: any): void {\r\n    if (event && event.data) {\r\n      if ((event.data as WebviewMessage).TranslationKey) {\r\n        this.message = event.data as WebviewMessage;\r\n        this.key = this.message.TranslationKey;\r\n        this.generateForm(this.message);\r\n        console.log(this.message);\r\n      } else if (event.data === 'Saved') {\r\n        this.dataSaved();\r\n      }\r\n    }\r\n  }\r\n\r\n  setFocus(name: string): void {\r\n    const ele = this.form.nativeElement[name];\r\n    if (ele) {\r\n      ele.focus();\r\n    }\r\n  }\r\n\r\n  onKeyDown($event): void {\r\n    // Detect platform\r\n    if (navigator.platform.match('Mac')) {\r\n      this.handleMacKeyEvents($event);\r\n    } else {\r\n      this.handleWindowsKeyEvents($event);\r\n    }\r\n  }\r\n\r\n  handleMacKeyEvents($event: any): void {\r\n    // MetaKey documentation\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/metaKey\r\n    const charCode = String.fromCharCode($event.which).toLowerCase();\r\n    if ($event.metaKey && charCode === 's') {\r\n      // Action on Cmd + S\r\n      this.save();\r\n      $event.preventDefault();\r\n      $event.stopImmediatePropagation();\r\n    }\r\n  }\r\n\r\n  handleWindowsKeyEvents($event): void {\r\n    const charCode = String.fromCharCode($event.which).toLowerCase();\r\n    if ($event.ctrlKey && charCode === 's') {\r\n      // Action on Ctrl + S\r\n      this.save();\r\n      $event.preventDefault();\r\n      $event.stopImmediatePropagation();\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    console.log(this.translationForms.value);\r\n\r\n    this.vscode.postMessage(this.translationForms.value);\r\n  }\r\n\r\n  dataSaved(): void {\r\n    this.notifierService.success('Translation Saved');\r\n  }\r\n}\r\n\r\ninterface Languages {\r\n  Culture: string;\r\n  English: string;\r\n  Native: string;\r\n  Direction: string;\r\n}\r\n\r\ninterface WebviewMessage {\r\n  languages: Array<Languages>;\r\n  TranslationKey: string;\r\n  value: [\r\n    {\r\n      culture: string;\r\n      translationValue: string;\r\n    }\r\n  ];\r\n}\r\n","<section class=\"section\" (keydown)=\"onKeyDown($event)\">\r\n  <div class=\"center\">\r\n    <div class=\"svg\" style=\"width:10%\"></div>\r\n    <h3 class=\"text-style\">Json Translation Manager</h3>\r\n  </div>\r\n  <form class=\"form-style\" [formGroup]=\"translationForms\" #form *ngIf=\"this.message\">\r\n    <div class=\"key-text\">\r\n      <span class=\"text-style\">Translation key : <span style=\"font-weight: bold;\">{{ key }}</span></span>\r\n      <div class=\"p-field-checkbox ms-5px d-inline\">\r\n        <p-checkbox name=\"group1\" binary=\"true\" formControlName=\"isArray\" inputId=\"isArray\"></p-checkbox>\r\n        <label class=\"ms-5px\" for=\"isArray\">isArray</label>\r\n      </div>\r\n    </div>\r\n\r\n    <ul>\r\n      <li formArrayName=\"value\" *ngFor=\"let item of this.value.controls; let i = index;\"\r\n        [dir]=\" this.message.languages[i].Direction\">\r\n        <div [formGroupName]=\"i\">\r\n          <label [class]=\" this.message.languages[i].Direction\" [for]=\" this.message.languages[i].Culture\">\r\n            {{ this.message.languages[i].Native}}</label>\r\n\r\n          <input *ngIf=\"this.translationForms.controls.isArray.value === false\" type=\"text\"\r\n            [name]=\"this.message.languages[i].Culture\" formControlName=\"translationValue\" />\r\n          <!-- <p-chips *ngIf=\"this.translationForms.controls.isArray.value === true\"\r\n            [name]=\"this.message.languages[i].Culture\" formControlName=\"translationValue\">\r\n          </p-chips> -->\r\n\r\n          <tag-input *ngIf=\"this.translationForms.controls.isArray.value === true\" placeholder=\"+\" modelAsStrings=\"true\"\r\n            [name]=\"this.message.languages[i].Culture\" formControlName=\"translationValue\" [editable]='true'></tag-input>\r\n        </div>\r\n      </li>\r\n\r\n      <li></li>\r\n    </ul>\r\n    <div style=\"text-align: center;\">\r\n      <button type=\"button\" (click)=\"save()\">\r\n        Save\r\n\r\n        <ng-container *ngIf=\"navigator.platform.match('Mac'); then Mac; else Other\">\r\n        </ng-container>\r\n\r\n        <ng-template #Mac>\r\n          <span>\r\n            (Command+S)\r\n          </span>\r\n        </ng-template>\r\n        <ng-template #Other>\r\n          <span>\r\n            (Ctrl+S)\r\n          </span>\r\n        </ng-template>\r\n      </button>\r\n    </div>\r\n  </form>\r\n\r\n\r\n</section>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { ChipsModule } from 'primeng/chips';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { HotToastModule } from '@ngneat/hot-toast';\r\nimport { TagInputModule } from 'ngx-chips';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ChipsModule,\r\n    CheckboxModule,\r\n    TagInputModule,\r\n    HotToastModule.forRoot({\r\n      position: 'bottom-center',\r\n      dismissible: true,\r\n    }),],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}